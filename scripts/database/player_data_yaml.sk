# Player Data YAML Database
# Handles loading, saving, and managing player data in YAML files for Skript scripts.
# Provides utility functions for setting and getting player data fields and lists.
# Developed for persistent player storage. Developed by @Zabrid.

options:
    directory: plugins/Skript/scripts/database/data/ # Directory where player YAML files are stored

on connect:
    load yaml "{@directory}%player's uuid%.yml" as "player-%player's uuid%"

on disconnect:
    save yaml "{@directory}/%player's uuid%.yml"
    unload yaml "player-%player's uuid%"

every 5 minutes:
    # Save all loaded YAML files every 5 minutes to prevent data loss
    loop all loaded yaml:
        wait 1 tick # Prevents server lag by spreading out saves
        save loop-value

function database_player_setvalue(uuid: text, field: text, value: object, save_immediently: boolean = false):
    if yaml "player-%{_uuid}%" is not loaded:
        set {_unload_later} to true
        load yaml "{@directory}%{_uuid}%.yml" as "player-%{_uuid}%"
    
    set yaml value {_field} from "player-%{_uuid}%" to {_value}

    if {_save_immediently} is true:
        save yaml "player-%{_uuid}%"

    if {_unload_later} is true:
        unload yaml "player-%{_uuid}%"

function database_player_delvalue(uuid: text, field: text, save_immediently: boolean = false):
    if yaml "player-%{_uuid}%" is not loaded:
        set {_unload_later} to true
        load yaml "{@directory}%{_uuid}%.yml" as "player-%{_uuid}%"
    
    delete yaml value {_field} from "player-%{_uuid}%"

    if {_save_immediently} is true:
        save yaml "player-%{_uuid}%"

    if {_unload_later} is true:
        unload yaml "player-%{_uuid}%"

function database_player_getvalue(uuid: text, field: text) :: object:
    if yaml "player-%{_uuid}%" is not loaded:
        set {_unload_later} to true
        load yaml "{@directory}%{_uuid}%.yml" as "player-%{_uuid}%"
    
    return yaml value {_field} from "player-%{_uuid}%"

    if {_unload_later} is true:
        unload yaml "player-%{_uuid}%"
    
function database_player_setlist(uuid: text, field: text, value: objects, save_immediently: boolean = false):
    if yaml "player-%{_uuid}%" is not loaded:
        set {_unload_later} to true
        load yaml "{@directory}%{_uuid}%.yml" as "player-%{_uuid}%"

    set yaml list {_field} from "player-%{_uuid}%" to {_value::*}

    if {_save_immediently} is true:
        save yaml "player-%{_uuid}%"
    
    if {_unload_later} is true:
        unload yaml "player-%{_uuid}%"

function database_player_dellist(uuid: text, field: text, save_immediently: boolean = false):
    if yaml "player-%{_uuid}%" is not loaded:
        set {_unload_later} to true
        load yaml "{@directory}%{_uuid}%.yml" as "player-%{_uuid}%"
    
    delete yaml list {_field} from "player-%{_uuid}%"

    if {_save_immediently} is true:
        save yaml "player-%{_uuid}%"

    if {_unload_later} is true:
        unload yaml "player-%{_uuid}%"

function database_player_getlist(uuid: text, field: text) :: objects:
    if yaml "player-%{_uuid}%" is not loaded:
        set {_unload_later} to true
        load yaml "{@directory}%{_uuid}%.yml" as "player-%{_uuid}%"

    return yaml list {_field} from "player-%{_uuid}%"

    if {_unload_later} is true:
        unload yaml "player-%{_uuid}%"